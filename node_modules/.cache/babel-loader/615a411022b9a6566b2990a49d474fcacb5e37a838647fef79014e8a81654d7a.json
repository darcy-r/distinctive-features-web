{"ast":null,"code":"var _jsxFileName = \"/Users/darcyroche/Documents/GitHub/distinctive-features-web/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport Form from 'react-bootstrap/Form';\nimport { useState, React } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst features = [\"dorsal\", \"voice\", \"continuant\"];\nconst distinctiveFeatures = {\n  \"k\": {\n    \"dorsal\": \"+\",\n    \"voice\": \"-\",\n    \"continuant\": \"-\"\n  },\n  \"d\": {\n    \"dorsal\": \"-\",\n    \"voice\": \"+\",\n    \"continuant\": \"-\"\n  }\n};\nfunction App() {\n  _s();\n  const [segmentSetA, setSegmentSetA] = useState([]);\n  function handleSetChange(setInputText) {\n    setSegmentSetA(setInputText.split(\",\"));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(SegmentSelector, {\n      changeHandler: handleSetChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SegmentDisplayer, {\n      segments: segmentSetA\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"KJit1IdvIkkpN1fakJ7EstOJpXY=\");\n_c = App;\nfunction SegmentSelector(_ref) {\n  let {\n    changeHandler\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Form.Group, {\n    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n      children: \"Set A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"text\",\n      onChange: e => changeHandler(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_c2 = SegmentSelector;\nfunction getCommonFeatures(segments) {\n  let commonFeatureValues = {};\n  for (let feature of features) {\n    const values = new Set();\n    for (let segment of segments) {\n      values.add(distinctiveFeatures[segment][feature]);\n    }\n    if (values.size == 1) {\n      commonFeatureValues[feature] = values.values().next().value;\n    }\n  }\n  return commonFeatureValues;\n}\nfunction SegmentDisplayer(_ref2) {\n  let {\n    segments\n  } = _ref2;\n  if (!segments) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No segments selected yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n  const commonFeatureValues = getCommonFeatures(segments);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Common features include:\", Object.keys(commonFeatureValues).map(k => k + \" \" + commonFeatureValues[k])]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_c3 = SegmentDisplayer;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"SegmentSelector\");\n$RefreshReg$(_c3, \"SegmentDisplayer\");","map":{"version":3,"names":["logo","Form","useState","React","jsxDEV","_jsxDEV","features","distinctiveFeatures","App","_s","segmentSetA","setSegmentSetA","handleSetChange","setInputText","split","className","children","SegmentSelector","changeHandler","fileName","_jsxFileName","lineNumber","columnNumber","SegmentDisplayer","segments","_c","_ref","Group","Label","Control","type","onChange","e","target","value","_c2","getCommonFeatures","commonFeatureValues","feature","values","Set","segment","add","size","next","_ref2","Object","keys","map","k","_c3","$RefreshReg$"],"sources":["/Users/darcyroche/Documents/GitHub/distinctive-features-web/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport Form from 'react-bootstrap/Form';\nimport { useState, React} from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nconst features = [\n  \"dorsal\",\n  \"voice\",\n  \"continuant\",\n]\n\nconst distinctiveFeatures = {\n  \"k\" : {\n    \"dorsal\" : \"+\",\n    \"voice\" : \"-\",\n    \"continuant\" : \"-\",\n  },\n  \"d\" : {\n    \"dorsal\" : \"-\",\n    \"voice\" : \"+\",\n    \"continuant\" : \"-\",\n  }\n}\n\nfunction App() {\n  const [segmentSetA, setSegmentSetA] = useState([]);\n  function handleSetChange(setInputText) {\n    setSegmentSetA(setInputText.split(\",\"));\n  }\n  return (\n    <div className=\"App\">\n      <SegmentSelector changeHandler={handleSetChange}/>\n      <SegmentDisplayer segments={segmentSetA}/>\n    </div>\n  );\n}\n\nfunction SegmentSelector( { changeHandler }) {\n  return (\n    <Form.Group>\n      <Form.Label>Set A</Form.Label>\n      <Form.Control type=\"text\" onChange={e => changeHandler(e.target.value)}/>\n    </Form.Group>\n  )\n}\n\nfunction getCommonFeatures(segments) {\n  let commonFeatureValues = {};\n  for (let feature of features) {\n    const values = new Set();\n    for (let segment of segments) {\n      values.add(distinctiveFeatures[segment][feature])\n    }\n    if (values.size == 1) {\n      commonFeatureValues[feature] = values.values().next().value;\n    }\n  }\n  return commonFeatureValues;\n}\n\nfunction SegmentDisplayer( { segments }) {\n  if (!segments) {\n    return (\n      <div>\n        No segments selected yet.\n      </div>\n    )\n  }\n  const commonFeatureValues = getCommonFeatures(segments);\n  return (\n    <div>\n      Common features include:\n      {\n        Object.keys(commonFeatureValues).map(k => k + \" \" + commonFeatureValues[k])\n      }\n    </div>\n  )\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}