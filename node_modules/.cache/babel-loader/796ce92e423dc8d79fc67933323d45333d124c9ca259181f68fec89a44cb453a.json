{"ast":null,"code":"var _jsxFileName = \"/Users/darcyroche/Documents/GitHub/distinctive-features-web/src/App.js\";\nimport logo from './logo.svg';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(SegmentSelector, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nfunction SegmentSelector(_ref) {\n  let {\n    changeHandler\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Form.Group, {\n    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n      children: \"Set A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"text\",\n      onChange: e => changeHandler(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_c2 = SegmentSelector;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"SegmentSelector\");","map":{"version":3,"names":["logo","jsxDEV","_jsxDEV","App","className","children","SegmentSelector","fileName","_jsxFileName","lineNumber","columnNumber","_c","_ref","changeHandler","Form","Group","Label","Control","type","onChange","e","target","value","_c2","$RefreshReg$"],"sources":["/Users/darcyroche/Documents/GitHub/distinctive-features-web/src/App.js"],"sourcesContent":["import logo from './logo.svg';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SegmentSelector/>\n    </div>\n  );\n}\n\nfunction SegmentSelector( { changeHandler }) {\n  return (\n    <Form.Group>\n      <Form.Label>Set A</Form.Label>\n      <Form.Control type=\"text\" onChange={e => changeHandler(e.target.value)}/>\n    </Form.Group>\n  )\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,YAAY;AAE7B,OAAO,sCAAsC;AAC7C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EACb,oBACED,OAAA;IAAKE,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBH,OAAA,CAACI,eAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEV;AAACC,EAAA,GANQR,GAAG;AAQZ,SAASG,eAAeA,CAAAM,IAAA,EAAqB;EAAA,IAAnB;IAAEC;EAAc,CAAC,GAAAD,IAAA;EACzC,oBACEV,OAAA,CAACY,IAAI,CAACC,KAAK;IAAAV,QAAA,gBACTH,OAAA,CAACY,IAAI,CAACE,KAAK;MAAAX,QAAA,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAC9BR,OAAA,CAACY,IAAI,CAACG,OAAO;MAACC,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEC,CAAC,IAAIP,aAAa,CAACO,CAAC,CAACC,MAAM,CAACC,KAAK;IAAE;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/D,CAAC;AAEjB;AAACa,GAAA,GAPQjB,eAAe;AASxB,eAAeH,GAAG;AAAC,IAAAQ,EAAA,EAAAY,GAAA;AAAAC,YAAA,CAAAb,EAAA;AAAAa,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}