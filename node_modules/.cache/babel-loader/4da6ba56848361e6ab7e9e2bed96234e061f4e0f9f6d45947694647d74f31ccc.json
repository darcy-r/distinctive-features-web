{"ast":null,"code":"var _jsxFileName = \"/Users/darcyroche/Documents/GitHub/distinctive-features-web/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport Form from 'react-bootstrap/Form';\nimport { useState, React } from 'react';\nimport { distinctiveFeatures } from './distinctiveFeatures.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst features = [\"syllabic\", \"sonorant\", \"consonantal\", \"continuant\", \"nasal\", \"anterior\", \"coronal\", \"lateral\", \"voice\"];\nfunction App() {\n  _s();\n  const [segmentSetA, setSegmentSetA] = useState([]);\n  const [segmentSetB, setSegmentSetB] = useState([]);\n  function handleSetChange(setInputText, setID) {\n    // disregard empty strings or segments not accounted for\n    let validSegments = [];\n    for (let segment of setInputText.split(\",\")) {\n      if (segment) {\n        validSegments.push(segment);\n      }\n    }\n    if (setID == \"A\") {\n      setSegmentSetA(validSegments);\n    } else if (setID == \"B\") {\n      setSegmentSetB(validSegments);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(SegmentSelector, {\n      setID: \"A\",\n      changeHandler: handleSetChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SegmentDisplayer, {\n      segments: segmentSetA\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SegmentSelector, {\n      setID: \"B\",\n      changeHandler: handleSetChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SegmentDisplayer, {\n      segments: segmentSetB\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"cAJWBoCpnkQ8vfGxurzgRZ84ew0=\");\n_c = App;\nfunction SegmentSelector(_ref) {\n  let {\n    setID,\n    changeHandler\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Form.Group, {\n    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n      children: [\"Set \", setID]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"text\",\n      onChange: e => changeHandler(e.target.value, setID)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_c2 = SegmentSelector;\nfunction getCommonFeatures(segments) {\n  let commonFeatureValues = {};\n  for (let feature of features) {\n    const values = new Set();\n    for (let segment of segments) {\n      values.add(distinctiveFeatures[segment][feature]);\n    }\n    if (values.size == 1) {\n      commonFeatureValues[feature] = values.values().next().value;\n    }\n  }\n  return commonFeatureValues;\n}\nfunction SegmentDisplayer(_ref2) {\n  let {\n    segments\n  } = _ref2;\n  if (segments.length == 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No segments entered yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n  const commonFeatureValues = getCommonFeatures(segments);\n  if (Object.keys(commonFeatureValues).length == 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"These segments have no features in common!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Common features include:\", Object.keys(commonFeatureValues).map(k => commonFeatureValues[k] + k)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_c3 = SegmentDisplayer;\nfunction DifferenceDisplayer(_ref3) {\n  let {\n    setA,\n    setB\n  } = _ref3;\n  if (setA.length > 0 && setB.length > 0) {\n    const commonFeatureValuesA = getCommonFeatures(setA);\n    const commonFeatureValuesB = getCommonFeatures(setB);\n    if (Object.keys(commonFeatureValuesA).length > 0 && Object.keys(commonFeatureValuesA).length > 0) {\n      let differences = [];\n      for (let feature of Object.keys(commonFeatureValuesA)) {\n        if (feature in commonFeatureValuesB && commonFeatureValuesB[feature] != commonFeatureValuesA[feature]) {\n          differences.push(feature);\n        }\n      }\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Distinguishing features: \", differences.join(\", \"), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this);\n    }\n  }\n}\n_c4 = DifferenceDisplayer;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"SegmentSelector\");\n$RefreshReg$(_c3, \"SegmentDisplayer\");\n$RefreshReg$(_c4, \"DifferenceDisplayer\");","map":{"version":3,"names":["logo","Form","useState","React","distinctiveFeatures","jsxDEV","_jsxDEV","features","App","_s","segmentSetA","setSegmentSetA","segmentSetB","setSegmentSetB","handleSetChange","setInputText","setID","validSegments","segment","split","push","className","children","SegmentSelector","changeHandler","fileName","_jsxFileName","lineNumber","columnNumber","SegmentDisplayer","segments","_c","_ref","Group","Label","Control","type","onChange","e","target","value","_c2","getCommonFeatures","commonFeatureValues","feature","values","Set","add","size","next","_ref2","length","Object","keys","map","k","_c3","DifferenceDisplayer","_ref3","setA","setB","commonFeatureValuesA","commonFeatureValuesB","differences","join","_c4","$RefreshReg$"],"sources":["/Users/darcyroche/Documents/GitHub/distinctive-features-web/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport Form from 'react-bootstrap/Form';\nimport { useState, React} from 'react';\nimport { distinctiveFeatures } from './distinctiveFeatures.js'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nconst features = [\n  \"syllabic\",\n  \"sonorant\",\n  \"consonantal\",\n  \"continuant\",\n  \"nasal\",\n  \"anterior\",\n  \"coronal\",\n  \"lateral\",\n  \"voice\",\n]\n\nfunction App() {\n  const [segmentSetA, setSegmentSetA] = useState([]);\n  const [segmentSetB, setSegmentSetB] = useState([]);\n  function handleSetChange(setInputText, setID) {\n    // disregard empty strings or segments not accounted for\n    let validSegments = [];\n    for (let segment of setInputText.split(\",\")) {\n      if (segment) {\n        validSegments.push(segment);\n      }\n    }\n    if (setID == \"A\") {\n      setSegmentSetA(validSegments)\n    } else if (setID == \"B\") {\n      setSegmentSetB(validSegments)\n    }\n\n  }\n  return (\n    <div className=\"App\">\n      <SegmentSelector setID=\"A\" changeHandler={handleSetChange}/>\n      <SegmentDisplayer segments={segmentSetA}/>\n      <SegmentSelector setID=\"B\" changeHandler={handleSetChange}/>\n      <SegmentDisplayer segments={segmentSetB}/>\n    </div>\n  );\n}\n\nfunction SegmentSelector( { setID, changeHandler }) {\n  return (\n    <Form.Group>\n      <Form.Label>Set {setID}</Form.Label>\n      <Form.Control type=\"text\" onChange={e => changeHandler(e.target.value, setID)}/>\n    </Form.Group>\n  )\n}\n\nfunction getCommonFeatures(segments) {\n  let commonFeatureValues = {};\n  for (let feature of features) {\n    const values = new Set();\n    for (let segment of segments) {\n      values.add(distinctiveFeatures[segment][feature])\n    }\n    if (values.size == 1) {\n      commonFeatureValues[feature] = values.values().next().value;\n    }\n  }\n  return commonFeatureValues;\n}\n\nfunction SegmentDisplayer( { segments }) {\n  if (segments.length == 0) {\n    return (\n      <div>\n        No segments entered yet.\n      </div>\n    )\n  }\n  const commonFeatureValues = getCommonFeatures(segments);\n  if (Object.keys(commonFeatureValues).length == 0) {\n    return (\n      <div>\n        These segments have no features in common!\n      </div>\n    )\n  }\n  return (\n    <div>\n      Common features include:\n      {\n        Object.keys(commonFeatureValues).map(k => commonFeatureValues[k] + k)\n      }\n    </div>\n  )\n}\n\nfunction DifferenceDisplayer( { setA, setB }) {\n  if (setA.length > 0 && setB.length > 0) {\n    const commonFeatureValuesA = getCommonFeatures(setA);\n    const commonFeatureValuesB = getCommonFeatures(setB);\n    if (Object.keys(commonFeatureValuesA).length > 0 && Object.keys(commonFeatureValuesA).length > 0) {\n      let differences = [];\n      for (let feature of Object.keys(commonFeatureValuesA)) {\n        if (feature in commonFeatureValuesB && commonFeatureValuesB[feature] != commonFeatureValuesA[feature]) {\n          differences.push(feature);\n        }\n      }\n      return (\n        <div>\n          Distinguishing features: {differences.join(\", \")}.\n        </div>\n      )\n    }\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}