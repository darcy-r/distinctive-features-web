{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/darcyroche/Documents/GitHub/distinctive-features-web/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _slicedToArray from\"/Users/darcyroche/Documents/GitHub/distinctive-features-web/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import logo from'./logo.svg';import Form from'react-bootstrap/Form';import{useState,React}from'react';import{distinctiveFeatures}from'./distinctiveFeatures.js';import Container from'react-bootstrap/Container';import Row from'react-bootstrap/Row';import Col from'react-bootstrap/Col';import Tab from'react-bootstrap/Tab';import Tabs from'react-bootstrap/Tabs';import Alert from'react-bootstrap/Alert';import'bootstrap/dist/css/bootstrap.min.css';import'./App.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var features=[\"syllabic\",\"sonorant\",\"consonantal\",\"continuant\",\"nasal\",\"anterior\",\"coronal\",\"lateral\",\"voice\"];var stringSplitter=/\\,|\\.|\\/|\\|/;function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),segmentSetA=_useState2[0],setSegmentSetA=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),segmentSetB=_useState4[0],setSegmentSetB=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),naturalClasses=_useState6[0],setNaturalClasses=_useState6[1];function handleSetChange(setInputText,setID){// disregard empty strings or segments not accounted for\nvar validSegments=[];var _iterator=_createForOfIteratorHelper(setInputText.split(stringSplitter).map(function(s){return s.trim();})),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var segment=_step.value;if(segment&&segment in distinctiveFeatures){validSegments.push(segment);}}}catch(err){_iterator.e(err);}finally{_iterator.f();}if(setID==\"A\"){setSegmentSetA(validSegments);}else if(setID==\"B\"){setSegmentSetB(validSegments);}}function handleClassChange(selected,feature,value){var updateObj=Object.assign({},naturalClasses);if(!selected){delete updateObj[feature];}else{updateObj[feature]=value;}setNaturalClasses(updateObj);}return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsx(Container,{className:\"app-content\",children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Distinctive features\"}),/*#__PURE__*/_jsxs(Tabs,{defaultActiveKey:\"features\",className:\"mb-3\",children:[/*#__PURE__*/_jsxs(Tab,{eventKey:\"features\",title:\"natural classes\",children:[/*#__PURE__*/_jsx(NaturalClassDisplayer,{classFeatures:naturalClasses}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"p\",{children:\"Create natural classes by selecting distinctive features below:\"})}),features.map(function(f){return/*#__PURE__*/_jsx(NaturalClassSelector,{feature:f,changeHandler:handleClassChange},f);})]}),/*#__PURE__*/_jsxs(Tab,{eventKey:\"segments\",title:\"features of segments\",children:[/*#__PURE__*/_jsx(DifferenceDisplayer,{setA:segmentSetA,setB:segmentSetB}),/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{xs:12,md:6,children:/*#__PURE__*/_jsxs(\"div\",{className:\"set-form\",children:[/*#__PURE__*/_jsx(SegmentSelector,{setID:\"A\",changeHandler:handleSetChange,selectedSegments:segmentSetA}),/*#__PURE__*/_jsx(SegmentDisplayer,{segments:segmentSetA})]})}),/*#__PURE__*/_jsx(Col,{xs:12,md:6,children:/*#__PURE__*/_jsxs(\"div\",{className:\"set-form\",children:[/*#__PURE__*/_jsx(SegmentSelector,{setID:\"B\",changeHandler:handleSetChange,selectedSegments:segmentSetB}),/*#__PURE__*/_jsx(SegmentDisplayer,{segments:segmentSetB})]})})]})})]})]})]})})});}function NaturalClassSelector(_ref){var feature=_ref.feature,changeHandler=_ref.changeHandler;var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),selected=_useState8[0],setSelected=_useState8[1];var _useState9=useState(\"+\"),_useState10=_slicedToArray(_useState9,2),selectedFeatureValue=_useState10[0],setSelectedFeatureValue=_useState10[1];return/*#__PURE__*/_jsx(Form,{children:/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Check,{inline:true,type:\"switch\",label:feature,onChange:function onChange(){setSelected(!selected);changeHandler(!selected,feature,selectedFeatureValue);},className:\"feature-check\"}),/*#__PURE__*/_jsx(Form.Check,{inline:true,type:\"radio\",disabled:!selected,checked:selectedFeatureValue==\"+\",onChange:function onChange(){setSelectedFeatureValue(\"+\");changeHandler(selected,feature,\"+\");},label:\"+\"}),/*#__PURE__*/_jsx(Form.Check,{inline:true,type:\"radio\",disabled:!selected,checked:selectedFeatureValue==\"-\",onChange:function onChange(){setSelectedFeatureValue(\"-\");changeHandler(selected,feature,\"-\");},label:\"-\"})]})});}function NaturalClassDisplayer(_ref2){var classFeatures=_ref2.classFeatures;if(Object.keys(classFeatures).length==0){return/*#__PURE__*/_jsx(Alert,{variant:\"light\",children:/*#__PURE__*/_jsx(\"i\",{children:\"segments will appear once features have been selected\"})});}var segmentsToDisplay=[];for(var _i=0,_Object$keys=Object.keys(distinctiveFeatures);_i<_Object$keys.length;_i++){var segment=_Object$keys[_i];var segmentQualifies=true;for(var _i2=0,_Object$keys2=Object.keys(classFeatures);_i2<_Object$keys2.length;_i2++){var feature=_Object$keys2[_i2];if(distinctiveFeatures[segment][feature]!=classFeatures[feature]){segmentQualifies=false;}}if(segmentQualifies){segmentsToDisplay.push(segment);}}if(segmentsToDisplay.length==0){return/*#__PURE__*/_jsx(Alert,{variant:\"warning\",children:\"No segments share all the features selected\"});}return/*#__PURE__*/_jsx(Alert,{variant:\"secondary\",children:segmentsToDisplay.join(\", \")});}function checkForInvalidSegments(segments){if(!segments){return[false,[]];}var invalidSegments=[];var _iterator2=_createForOfIteratorHelper(segments),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var segment=_step2.value;if(segment!=\"\"&&!(segment in distinctiveFeatures)){invalidSegments.push(segment);}}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}if(invalidSegments.length==0){return[false,[]];}return[true,invalidSegments];}function SegmentSelector(_ref3){var setID=_ref3.setID,changeHandler=_ref3.changeHandler,selectedSegments=_ref3.selectedSegments;var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),containsInvalidSegments=_useState12[0],setContainsInvalidSegments=_useState12[1];var _useState13=useState([]),_useState14=_slicedToArray(_useState13,2),invalidSegments=_useState14[0],setInvalidSegments=_useState14[1];return/*#__PURE__*/_jsx(Form,{children:/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsxs(Form.Label,{children:[\"Set \",setID]}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",size:\"lg\",placeholder:\"e.g. m, n, \\u014B\",onChange:function onChange(e){changeHandler(e.target.value,setID);var _checkForInvalidSegme=checkForInvalidSegments(e.target.value.split(stringSplitter).map(function(s){return s.trim();})),_checkForInvalidSegme2=_slicedToArray(_checkForInvalidSegme,2),contains=_checkForInvalidSegme2[0],s=_checkForInvalidSegme2[1];setContainsInvalidSegments(contains);setInvalidSegments(s);}}),selectedSegments.length==0&&/*#__PURE__*/_jsx(Form.Text,{children:\"Enter IPA segments separated by punctuation\"}),containsInvalidSegments&&/*#__PURE__*/_jsxs(Form.Text,{children:[\"The following segment(s) are not recognised:\",invalidSegments.join(\", \")]})]})});}function getCommonFeatures(segments){var commonFeatureValues={};var _iterator3=_createForOfIteratorHelper(features),_step3;try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){var feature=_step3.value;var values=new Set();var _iterator4=_createForOfIteratorHelper(segments),_step4;try{for(_iterator4.s();!(_step4=_iterator4.n()).done;){var segment=_step4.value;values.add(distinctiveFeatures[segment][feature]);}}catch(err){_iterator4.e(err);}finally{_iterator4.f();}if(values.size==1){commonFeatureValues[feature]=values.values().next().value;}}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}return commonFeatureValues;}function SegmentDisplayer(_ref4){var segments=_ref4.segments;if(segments.length==0){return;}var commonFeatureValues=getCommonFeatures(segments);if(Object.keys(commonFeatureValues).length==0){return/*#__PURE__*/_jsx(\"div\",{children:\"These segments have no features in common!\"});}return/*#__PURE__*/_jsxs(\"div\",{children:[\"Common features include:\",/*#__PURE__*/_jsx(\"ul\",{children:Object.keys(commonFeatureValues).map(function(k){return/*#__PURE__*/_jsx(\"li\",{children:commonFeatureValues[k]+k},k);})})]});}function DifferenceDisplayer(_ref5){var setA=_ref5.setA,setB=_ref5.setB;if(setA.length==0&&setB.length==0){return;}if(setA.length>0&&setB.length>0){var commonFeatureValuesA=getCommonFeatures(setA);var commonFeatureValuesB=getCommonFeatures(setB);if(Object.keys(commonFeatureValuesA).length>0&&Object.keys(commonFeatureValuesA).length>0){var differences=[];var uniques=[];for(var _i3=0,_Object$keys3=Object.keys(commonFeatureValuesA);_i3<_Object$keys3.length;_i3++){var feature=_Object$keys3[_i3];if(feature in commonFeatureValuesB&&commonFeatureValuesB[feature]!=commonFeatureValuesA[feature]){differences.push(feature);}if(!(feature in commonFeatureValuesB)){uniques.push({\"feature\":feature,\"value\":commonFeatureValuesA[feature]});}}if(differences.length>0){return/*#__PURE__*/_jsxs(\"div\",{children:[\"Features distinguishing set A from set B:\",/*#__PURE__*/_jsx(\"ul\",{children:differences.map(function(d){return/*#__PURE__*/_jsx(\"li\",{children:d},d);})})]});}if(uniques.length>0){// count how important each unique is\nvar featureExclusions={};var _iterator5=_createForOfIteratorHelper(uniques),_step5;try{for(_iterator5.s();!(_step5=_iterator5.n()).done;){var _feature=_step5.value;// count how many segments in B that this feature of A rules out\nvar exclusions=[];var _iterator6=_createForOfIteratorHelper(setB),_step6;try{for(_iterator6.s();!(_step6=_iterator6.n()).done;){var segment=_step6.value;if(distinctiveFeatures[segment][_feature[\"feature\"]]!=_feature[\"value\"]){exclusions.push(segment);}}}catch(err){_iterator6.e(err);}finally{_iterator6.f();}featureExclusions[_feature[\"feature\"]]=exclusions.slice();}}catch(err){_iterator5.e(err);}finally{_iterator5.f();}return/*#__PURE__*/_jsxs(\"div\",{children:[\"Common features of A that are not common to B:\",/*#__PURE__*/_jsx(\"ul\",{children:uniques.map(function(x){return/*#__PURE__*/_jsx(\"li\",{children:x[\"value\"]+x[\"feature\"]+\" (distinguishes A from \"+featureExclusions[x[\"feature\"]].length+\" segment\"+(featureExclusions[x[\"feature\"]].length>1?\"s\":\"\")+\" in B)\"},x[\"feature\"]);})})]});}}}return/*#__PURE__*/_jsx(\"div\",{children:\"No features distinguish these two sets of segments.\"});}export default App;","map":{"version":3,"names":["logo","Form","useState","React","distinctiveFeatures","Container","Row","Col","Tab","Tabs","Alert","jsx","_jsx","jsxs","_jsxs","features","stringSplitter","App","_useState","_useState2","_slicedToArray","segmentSetA","setSegmentSetA","_useState3","_useState4","segmentSetB","setSegmentSetB","_useState5","_useState6","naturalClasses","setNaturalClasses","handleSetChange","setInputText","setID","validSegments","_iterator","_createForOfIteratorHelper","split","map","s","trim","_step","n","done","segment","value","push","err","e","f","handleClassChange","selected","feature","updateObj","Object","assign","className","children","defaultActiveKey","eventKey","title","NaturalClassDisplayer","classFeatures","NaturalClassSelector","changeHandler","DifferenceDisplayer","setA","setB","xs","md","SegmentSelector","selectedSegments","SegmentDisplayer","segments","_ref","_useState7","_useState8","setSelected","_useState9","_useState10","selectedFeatureValue","setSelectedFeatureValue","Group","Check","inline","type","label","onChange","disabled","checked","_ref2","keys","length","variant","segmentsToDisplay","_i","_Object$keys","segmentQualifies","_i2","_Object$keys2","join","checkForInvalidSegments","invalidSegments","_iterator2","_step2","_ref3","_useState11","_useState12","containsInvalidSegments","setContainsInvalidSegments","_useState13","_useState14","setInvalidSegments","Label","Control","size","placeholder","target","_checkForInvalidSegme","_checkForInvalidSegme2","contains","Text","getCommonFeatures","commonFeatureValues","_iterator3","_step3","values","Set","_iterator4","_step4","add","next","_ref4","k","_ref5","commonFeatureValuesA","commonFeatureValuesB","differences","uniques","_i3","_Object$keys3","d","featureExclusions","_iterator5","_step5","exclusions","_iterator6","_step6","slice","x"],"sources":["/Users/darcyroche/Documents/GitHub/distinctive-features-web/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport Form from 'react-bootstrap/Form';\nimport { useState, React} from 'react';\nimport { distinctiveFeatures } from './distinctiveFeatures.js'\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Tab from 'react-bootstrap/Tab';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Alert from 'react-bootstrap/Alert';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nconst features = [\n  \"syllabic\",\n  \"sonorant\",\n  \"consonantal\",\n  \"continuant\",\n  \"nasal\",\n  \"anterior\",\n  \"coronal\",\n  \"lateral\",\n  \"voice\",\n]\n\nconst stringSplitter = /\\,|\\.|\\/|\\|/;\n\nfunction App() {\n  const [segmentSetA, setSegmentSetA] = useState([]);\n  const [segmentSetB, setSegmentSetB] = useState([]);\n  const [naturalClasses, setNaturalClasses] = useState({});\n  function handleSetChange(setInputText, setID) {\n    // disregard empty strings or segments not accounted for\n    let validSegments = [];\n    for (let segment of setInputText.split(stringSplitter).map(s => s.trim())) {\n      if (segment && segment in distinctiveFeatures) {\n        validSegments.push(segment);\n      }\n    }\n    if (setID == \"A\") {\n      setSegmentSetA(validSegments)\n    } else if (setID == \"B\") {\n      setSegmentSetB(validSegments)\n    }\n  }\n  function handleClassChange(selected, feature, value) {\n    let updateObj = Object.assign({}, naturalClasses);\n    if (!selected) {\n      delete updateObj[feature];\n    } else {\n      updateObj[feature] = value;\n    }\n    setNaturalClasses(updateObj);\n  }\n  return (\n    <div className=\"App\">\n      <Container className=\"app-content\">\n      <Row>\n        <h1>Distinctive features</h1>\n        <Tabs\n          defaultActiveKey=\"features\"\n          className=\"mb-3\"\n        >\n          <Tab eventKey=\"features\" title=\"natural classes\">\n            <NaturalClassDisplayer classFeatures={naturalClasses}/>\n            <div>\n              <p>Create natural classes by selecting distinctive features below:</p>\n            </div>\n            {features.map(f => <NaturalClassSelector feature={f} key={f} changeHandler={handleClassChange}/>)}\n          </Tab>\n          <Tab eventKey=\"segments\" title=\"features of segments\">\n          <DifferenceDisplayer setA={segmentSetA} setB={segmentSetB}/>\n          <Container>\n            <Row>\n              <Col xs={12} md={6}>\n                <div className=\"set-form\">\n                  <SegmentSelector setID=\"A\" changeHandler={handleSetChange} selectedSegments={segmentSetA}/>\n                  <SegmentDisplayer segments={segmentSetA}/>\n                </div>\n              </Col>\n              <Col xs={12} md={6}>\n                <div className=\"set-form\">\n                  <SegmentSelector setID=\"B\" changeHandler={handleSetChange} selectedSegments={segmentSetB}/>\n                  <SegmentDisplayer segments={segmentSetB}/>\n                </div>\n              </Col>\n            </Row>\n          </Container>\n          </Tab>\n        </Tabs>\n      </Row>\n      </Container>\n    </div>\n  );\n}\n\nfunction NaturalClassSelector( { feature, changeHandler } ) {\n  const [selected, setSelected] = useState(false);\n  const [selectedFeatureValue, setSelectedFeatureValue] = useState(\"+\");\n  return (\n    <Form>\n      <Form.Group>\n        <Form.Check\n          inline\n          type=\"switch\"\n          label={feature}\n          onChange={() => {\n            setSelected(!selected);\n            changeHandler(!selected, feature, selectedFeatureValue);\n          }}\n          className=\"feature-check\"\n        />\n        <Form.Check\n          inline\n          type=\"radio\"\n          disabled={!selected}\n          checked={selectedFeatureValue == \"+\"}\n          onChange={() => {\n            setSelectedFeatureValue(\"+\");\n            changeHandler(selected, feature, \"+\");\n          }}\n          label=\"+\"\n        />\n        <Form.Check\n          inline\n          type=\"radio\"\n          disabled={!selected}\n          checked={selectedFeatureValue == \"-\"}\n          onChange={() => {\n            setSelectedFeatureValue(\"-\");\n            changeHandler(selected, feature, \"-\");\n          }}\n          label=\"-\"\n        />\n      </Form.Group>\n    </Form>\n  )\n}\n\nfunction NaturalClassDisplayer( { classFeatures } ) {\n  if (Object.keys(classFeatures).length == 0) {\n    return (\n      <Alert variant=\"light\">\n        <i>segments will appear once features have been selected</i>\n      </Alert>\n    )\n  }\n  let segmentsToDisplay = [];\n  for (let segment of Object.keys(distinctiveFeatures)) {\n    let segmentQualifies = true;\n    for (let feature of Object.keys(classFeatures)) {\n      if (distinctiveFeatures[segment][feature] != classFeatures[feature]) {\n        segmentQualifies = false;\n      }\n    }\n    if (segmentQualifies) {\n      segmentsToDisplay.push(segment);\n    }\n  }\n  if (segmentsToDisplay.length == 0) {\n    return (\n      <Alert variant=\"warning\">\n        No segments share all the features selected\n      </Alert>\n    )\n  }\n  return (\n    <Alert variant=\"secondary\">\n      {segmentsToDisplay.join(\", \")}\n    </Alert>\n  )\n}\n\nfunction checkForInvalidSegments(segments) {\n  if (! segments) {\n    return [false, []]\n  }\n  let invalidSegments = [];\n  for (let segment of segments) {\n    if (segment != \"\" && (! (segment in distinctiveFeatures))) {\n      invalidSegments.push(segment);\n    }\n  }\n  if (invalidSegments.length == 0) {\n    return [false, []]\n  }\n  return [true, invalidSegments]\n}\n\nfunction SegmentSelector( { setID, changeHandler, selectedSegments }) {\n  const [containsInvalidSegments, setContainsInvalidSegments] = useState(false);\n  const [invalidSegments, setInvalidSegments] = useState([]);\n  return (\n    <Form>\n      <Form.Group>\n        <Form.Label>Set {setID}</Form.Label>\n        <Form.Control\n          type=\"text\"\n          size=\"lg\"\n          placeholder=\"e.g. m, n, ŋ\"\n          onChange={e => {\n            changeHandler(e.target.value, setID);\n            const [contains, s] = checkForInvalidSegments(e.target.value.split(stringSplitter).map(s => s.trim()));\n            setContainsInvalidSegments(contains);\n            setInvalidSegments(s);\n          }}\n          />\n        {\n          selectedSegments.length == 0 &&\n          <Form.Text>\n            Enter IPA segments separated by punctuation\n          </Form.Text>\n        }\n        {\n          containsInvalidSegments &&\n          <Form.Text>\n          The following segment(s) are not recognised:\n          {invalidSegments.join(\", \")}\n          </Form.Text>\n        }\n      </Form.Group>\n    </Form>\n  )\n}\n\nfunction getCommonFeatures(segments) {\n  let commonFeatureValues = {};\n  for (let feature of features) {\n    const values = new Set();\n    for (let segment of segments) {\n      values.add(distinctiveFeatures[segment][feature])\n    }\n    if (values.size == 1) {\n      commonFeatureValues[feature] = values.values().next().value;\n    }\n  }\n  return commonFeatureValues;\n}\n\nfunction SegmentDisplayer( { segments }) {\n  if (segments.length == 0) {\n    return\n  }\n  const commonFeatureValues = getCommonFeatures(segments);\n  if (Object.keys(commonFeatureValues).length == 0) {\n    return (\n      <div>\n        These segments have no features in common!\n      </div>\n    )\n  }\n  return (\n    <div>\n      Common features include:\n      <ul>\n      {\n        Object.keys(commonFeatureValues).map(k => <li key={k}>{commonFeatureValues[k] + k}</li>)\n      }\n      </ul>\n    </div>\n  )\n}\n\nfunction DifferenceDisplayer( { setA, setB }) {\n  if (setA.length == 0 && setB.length == 0) {\n    return\n  }\n  if (setA.length > 0 && setB.length > 0) {\n    const commonFeatureValuesA = getCommonFeatures(setA);\n    const commonFeatureValuesB = getCommonFeatures(setB);\n    if (Object.keys(commonFeatureValuesA).length > 0 && Object.keys(commonFeatureValuesA).length > 0) {\n      let differences = [];\n      let uniques = [];\n      for (let feature of Object.keys(commonFeatureValuesA)) {\n        if (feature in commonFeatureValuesB && commonFeatureValuesB[feature] != commonFeatureValuesA[feature]) {\n          differences.push(feature);\n        }\n        if (!(feature in commonFeatureValuesB)) {\n          uniques.push({\"feature\" : feature, \"value\" : commonFeatureValuesA[feature]});\n        }\n      }\n      if (differences.length > 0) {\n        return (\n          <div>\n            Features distinguishing set A from set B:\n            <ul>\n              {differences.map(d => <li key={d}>{d}</li>)}\n            </ul>\n          </div>\n        )\n      }\n      if (uniques.length > 0) {\n        // count how important each unique is\n        let featureExclusions = {};\n        for (let feature of uniques) {\n          // count how many segments in B that this feature of A rules out\n          let exclusions = [];\n          for (let segment of setB) {\n            if (distinctiveFeatures[segment][feature[\"feature\"]] != feature[\"value\"]) {\n              exclusions.push(segment);\n            }\n          }\n          featureExclusions[feature[\"feature\"]] = exclusions.slice();\n        }\n        return (\n          <div>\n            Common features of A that are not common to B:\n            <ul>\n              {uniques.map(x => {\n                return (\n                  <li key={x[\"feature\"]}>\n                    {x[\"value\"] + x[\"feature\"] + \" (distinguishes A from \" + featureExclusions[x[\"feature\"]].length + \" segment\" + (featureExclusions[x[\"feature\"]].length > 1? \"s\" : \"\") + \" in B)\"}\n                  </li>\n                )\n              })}\n            </ul>\n          </div>\n        )\n      }\n    }\n  }\n  return (\n    <div>No features distinguish these two sets of segments.</div>\n  )\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}