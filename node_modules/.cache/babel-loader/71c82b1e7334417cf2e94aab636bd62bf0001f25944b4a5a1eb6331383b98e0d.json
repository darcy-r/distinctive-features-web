{"ast":null,"code":"var _jsxFileName = \"/Users/darcyroche/Documents/GitHub/distinctive-features-web/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport logo from './logo.svg';\nimport Form from 'react-bootstrap/Form';\nimport { useState, React } from 'react';\nimport { distinctiveFeatures } from './distinctiveFeatures.js';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Tab from 'react-bootstrap/Tab';\nimport Tabs from 'react-bootstrap/Tabs';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst features = [\"syllabic\", \"sonorant\", \"consonantal\", \"continuant\", \"nasal\", \"anterior\", \"coronal\", \"lateral\", \"voice\"];\nconst stringSplitter = /\\,|\\.|\\/|\\|/;\nfunction App() {\n  _s();\n  const [segmentSetA, setSegmentSetA] = useState([]);\n  const [segmentSetB, setSegmentSetB] = useState([]);\n  const [naturalClasses, setNaturalClasses] = useState({});\n  function handleSetChange(setInputText, setID) {\n    // disregard empty strings or segments not accounted for\n    let validSegments = [];\n    for (let segment of setInputText.split(stringSplitter).map(s => s.trim())) {\n      if (segment && segment in distinctiveFeatures) {\n        validSegments.push(segment);\n      }\n    }\n    if (setID == \"A\") {\n      setSegmentSetA(validSegments);\n    } else if (setID == \"B\") {\n      setSegmentSetB(validSegments);\n    }\n  }\n  function handleClassChange(selected, feature, value) {\n    console.log(\"Handling class change\");\n    let updateObj = Object.assign({}, naturalClasses);\n    if (!selected) {\n      delete updateObj[feature];\n    } else {\n      updateObj[feature] = value;\n    }\n    console.log(\"Setting natural classes to:\");\n    console.log(updateObj);\n    setNaturalClasses(updateObj);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"app-content\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Distinctive features\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n          defaultActiveKey: \"segments\",\n          id: \"uncontrolled-tab-example\",\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            eventKey: \"segments\",\n            title: \"features of segments\",\n            children: [/*#__PURE__*/_jsxDEV(DifferenceDisplayer, {\n              setA: segmentSetA,\n              setB: segmentSetB\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Container, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"set-form\",\n                    children: [/*#__PURE__*/_jsxDEV(SegmentSelector, {\n                      setID: \"A\",\n                      changeHandler: handleSetChange,\n                      selectedSegments: segmentSetA\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 74,\n                      columnNumber: 19\n                    }, this), /*#__PURE__*/_jsxDEV(SegmentDisplayer, {\n                      segments: segmentSetA\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 75,\n                      columnNumber: 19\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 17\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"set-form\",\n                    children: [/*#__PURE__*/_jsxDEV(SegmentSelector, {\n                      setID: \"B\",\n                      changeHandler: handleSetChange,\n                      selectedSegments: segmentSetB\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 80,\n                      columnNumber: 19\n                    }, this), /*#__PURE__*/_jsxDEV(SegmentDisplayer, {\n                      segments: segmentSetB\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 81,\n                      columnNumber: 19\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 17\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            eventKey: \"features\",\n            title: \"natural classes\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(NaturalClassDisplayer, {\n                classFeatures: naturalClasses\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Create natural classes by selecting distinctive features below:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 13\n            }, this), features.map(f => /*#__PURE__*/_jsxDEV(NaturalClassSelector, {\n              feature: f,\n              changeHandler: handleClassChange\n            }, f, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 32\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"HpEAk6KEETVWqp4hpRj6/9PaBjI=\");\n_c = App;\nfunction NaturalClassSelector(_ref) {\n  _s2();\n  let {\n    feature,\n    changeHandler\n  } = _ref;\n  const [selected, setSelected] = useState(false);\n  const [selectedFeatureValue, setSelectedFeatureValue] = useState(\"+\");\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n        inline: true,\n        type: \"switch\",\n        label: feature,\n        onChange: () => {\n          setSelected(!selected);\n          changeHandler(!selected, feature, selectedFeatureValue);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n        inline: true,\n        type: \"radio\",\n        disabled: !selected,\n        checked: selectedFeatureValue == \"+\",\n        onChange: () => {\n          setSelectedFeatureValue(\"+\");\n          changeHandler(selected, feature, \"+\");\n        },\n        label: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n        inline: true,\n        type: \"radio\",\n        disabled: !selected,\n        checked: selectedFeatureValue == \"-\",\n        onChange: () => {\n          setSelectedFeatureValue(\"-\");\n          changeHandler(selected, feature, \"-\");\n        },\n        label: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_s2(NaturalClassSelector, \"b5zLS05FlMGhwAI8X68Aq7UnYvM=\");\n_c2 = NaturalClassSelector;\nfunction NaturalClassDisplayer(_ref2) {\n  let {\n    classFeatures\n  } = _ref2;\n  console.log(\"NaturalClassDisplayer is being called...\");\n  if (Object.keys(classFeatures).length == 0) {\n    console.log(\"natural classes is length zero\");\n    return /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this);\n  }\n  let segmentsToDisplay = [];\n  console.log(\"about to loop through segments of distinctiveFeatures\");\n  for (let segment of Object.keys(distinctiveFeatures)) {\n    let segmentQualifies = true;\n    for (let feature of Object.keys(classFeatures)) {\n      if (distinctiveFeatures[segment][feature] != classFeatures[feature]) {\n        segmentQualifies = false;\n        console.log(\"segment \", segment, \" does not qualify as \", classFeatures[feature], feature);\n        console.log(distinctiveFeatures[segment][feature]);\n        console.log(classFeatures[feature]);\n      }\n    }\n    if (segmentQualifies) {\n      segmentsToDisplay.push(segment);\n    }\n  }\n  console.log(\"about to return segments to display:\");\n  console.log(segmentsToDisplay);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"This is some text. \", /*#__PURE__*/_jsxDEV(\"span\", {\n      children: segmentsToDisplay.join(\", \")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n}\n_c3 = NaturalClassDisplayer;\nfunction checkForInvalidSegments(segments) {\n  if (!segments) {\n    return [false, []];\n  }\n  let invalidSegments = [];\n  for (let segment of segments) {\n    if (segment != \"\" && !(segment in distinctiveFeatures)) {\n      invalidSegments.push(segment);\n    }\n  }\n  if (invalidSegments.length == 0) {\n    return [false, []];\n  }\n  return [true, invalidSegments];\n}\nfunction SegmentSelector(_ref3) {\n  _s3();\n  let {\n    setID,\n    changeHandler,\n    selectedSegments\n  } = _ref3;\n  const [containsInvalidSegments, setContainsInvalidSegments] = useState(false);\n  const [invalidSegments, setInvalidSegments] = useState([]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: [\"Set \", setID]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        size: \"lg\",\n        placeholder: \"e.g. m, n, \\u014B\",\n        onChange: e => {\n          changeHandler(e.target.value, setID);\n          const [contains, s] = checkForInvalidSegments(e.target.value.split(stringSplitter).map(s => s.trim()));\n          setContainsInvalidSegments(contains);\n          setInvalidSegments(s);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), selectedSegments.length == 0 && /*#__PURE__*/_jsxDEV(Form.Text, {\n        children: \"Enter IPA segments separated by punctuation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this), containsInvalidSegments && /*#__PURE__*/_jsxDEV(Form.Text, {\n        children: [\"The following segment(s) are not recognised:\", invalidSegments.join(\", \")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n}\n_s3(SegmentSelector, \"fpBR5Ewa17XIGk3eoTaKxYgy9qo=\");\n_c4 = SegmentSelector;\nfunction getCommonFeatures(segments) {\n  let commonFeatureValues = {};\n  for (let feature of features) {\n    const values = new Set();\n    for (let segment of segments) {\n      values.add(distinctiveFeatures[segment][feature]);\n    }\n    if (values.size == 1) {\n      commonFeatureValues[feature] = values.values().next().value;\n    }\n  }\n  return commonFeatureValues;\n}\nfunction SegmentDisplayer(_ref4) {\n  let {\n    segments\n  } = _ref4;\n  if (segments.length == 0) {\n    return;\n  }\n  const commonFeatureValues = getCommonFeatures(segments);\n  if (Object.keys(commonFeatureValues).length == 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"These segments have no features in common!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Common features include:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Object.keys(commonFeatureValues).map(k => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: commonFeatureValues[k] + k\n      }, k, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 51\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 257,\n    columnNumber: 5\n  }, this);\n}\n_c5 = SegmentDisplayer;\nfunction DifferenceDisplayer(_ref5) {\n  let {\n    setA,\n    setB\n  } = _ref5;\n  if (setA.length == 0 && setB.length == 0) {\n    return;\n  }\n  if (setA.length > 0 && setB.length > 0) {\n    const commonFeatureValuesA = getCommonFeatures(setA);\n    const commonFeatureValuesB = getCommonFeatures(setB);\n    if (Object.keys(commonFeatureValuesA).length > 0 && Object.keys(commonFeatureValuesA).length > 0) {\n      let differences = [];\n      let uniques = [];\n      for (let feature of Object.keys(commonFeatureValuesA)) {\n        if (feature in commonFeatureValuesB && commonFeatureValuesB[feature] != commonFeatureValuesA[feature]) {\n          differences.push(feature);\n        }\n        if (!(feature in commonFeatureValuesB)) {\n          uniques.push({\n            \"feature\": feature,\n            \"value\": commonFeatureValuesA[feature]\n          });\n        }\n      }\n      if (differences.length > 0) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Features distinguishing set A from set B:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: differences.map(d => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: d\n            }, d, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this);\n      }\n      if (uniques.length > 0) {\n        // count how important each unique is\n        let featureExclusions = {};\n        for (let feature of uniques) {\n          // count how many segments in B that this feature of A rules out\n          let exclusions = [];\n          for (let segment of setB) {\n            if (distinctiveFeatures[segment][feature[\"feature\"]] != feature[\"value\"]) {\n              exclusions.push(segment);\n            }\n          }\n          featureExclusions[feature[\"feature\"]] = exclusions.slice();\n        }\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Common features of A that are not common to B:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: uniques.map(x => {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: x[\"value\"] + x[\"feature\"] + \" (distinguishes A from \" + featureExclusions[x[\"feature\"]].length + \" segment\" + (featureExclusions[x[\"feature\"]].length > 1 ? \"s\" : \"\") + \" in B)\"\n              }, x[\"feature\"], false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this);\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No features distinguish these two sets of segments.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 327,\n    columnNumber: 5\n  }, this);\n}\n_c6 = DifferenceDisplayer;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"NaturalClassSelector\");\n$RefreshReg$(_c3, \"NaturalClassDisplayer\");\n$RefreshReg$(_c4, \"SegmentSelector\");\n$RefreshReg$(_c5, \"SegmentDisplayer\");\n$RefreshReg$(_c6, \"DifferenceDisplayer\");","map":{"version":3,"names":["logo","Form","useState","React","distinctiveFeatures","Container","Row","Col","Tab","Tabs","jsxDEV","_jsxDEV","features","stringSplitter","App","_s","segmentSetA","setSegmentSetA","segmentSetB","setSegmentSetB","naturalClasses","setNaturalClasses","handleSetChange","setInputText","setID","validSegments","segment","split","map","s","trim","push","handleClassChange","selected","feature","value","console","log","updateObj","Object","assign","className","children","fileName","_jsxFileName","lineNumber","columnNumber","defaultActiveKey","id","eventKey","title","DifferenceDisplayer","setA","setB","xs","md","SegmentSelector","changeHandler","selectedSegments","SegmentDisplayer","segments","NaturalClassDisplayer","classFeatures","f","NaturalClassSelector","_c","_ref","_s2","setSelected","selectedFeatureValue","setSelectedFeatureValue","Group","Check","inline","type","label","onChange","disabled","checked","_c2","_ref2","keys","length","segmentsToDisplay","segmentQualifies","join","_c3","checkForInvalidSegments","invalidSegments","_ref3","_s3","containsInvalidSegments","setContainsInvalidSegments","setInvalidSegments","Label","Control","size","placeholder","e","target","contains","Text","_c4","getCommonFeatures","commonFeatureValues","values","Set","add","next","_ref4","k","_c5","_ref5","commonFeatureValuesA","commonFeatureValuesB","differences","uniques","d","featureExclusions","exclusions","slice","x","_c6","$RefreshReg$"],"sources":["/Users/darcyroche/Documents/GitHub/distinctive-features-web/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport Form from 'react-bootstrap/Form';\nimport { useState, React} from 'react';\nimport { distinctiveFeatures } from './distinctiveFeatures.js'\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Tab from 'react-bootstrap/Tab';\nimport Tabs from 'react-bootstrap/Tabs';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nconst features = [\n  \"syllabic\",\n  \"sonorant\",\n  \"consonantal\",\n  \"continuant\",\n  \"nasal\",\n  \"anterior\",\n  \"coronal\",\n  \"lateral\",\n  \"voice\",\n]\n\nconst stringSplitter = /\\,|\\.|\\/|\\|/;\n\nfunction App() {\n  const [segmentSetA, setSegmentSetA] = useState([]);\n  const [segmentSetB, setSegmentSetB] = useState([]);\n  const [naturalClasses, setNaturalClasses] = useState({});\n  function handleSetChange(setInputText, setID) {\n    // disregard empty strings or segments not accounted for\n    let validSegments = [];\n    for (let segment of setInputText.split(stringSplitter).map(s => s.trim())) {\n      if (segment && segment in distinctiveFeatures) {\n        validSegments.push(segment);\n      }\n    }\n    if (setID == \"A\") {\n      setSegmentSetA(validSegments)\n    } else if (setID == \"B\") {\n      setSegmentSetB(validSegments)\n    }\n  }\n  function handleClassChange(selected, feature, value) {\n    console.log(\"Handling class change\");\n    let updateObj = Object.assign({}, naturalClasses);\n    if (!selected) {\n      delete updateObj[feature];\n    } else {\n      updateObj[feature] = value;\n    }\n    console.log(\"Setting natural classes to:\");\n    console.log(updateObj);\n    setNaturalClasses(updateObj);\n  }\n  return (\n    <div className=\"App\">\n      <Container className=\"app-content\">\n      <Row>\n        <h1>Distinctive features</h1>\n        <Tabs\n          defaultActiveKey=\"segments\"\n          id=\"uncontrolled-tab-example\"\n          className=\"mb-3\"\n        >\n          <Tab eventKey=\"segments\" title=\"features of segments\">\n          <DifferenceDisplayer setA={segmentSetA} setB={segmentSetB}/>\n          <Container>\n            <Row>\n              <Col xs={12} md={6}>\n                <div className=\"set-form\">\n                  <SegmentSelector setID=\"A\" changeHandler={handleSetChange} selectedSegments={segmentSetA}/>\n                  <SegmentDisplayer segments={segmentSetA}/>\n                </div>\n              </Col>\n              <Col xs={12} md={6}>\n                <div className=\"set-form\">\n                  <SegmentSelector setID=\"B\" changeHandler={handleSetChange} selectedSegments={segmentSetB}/>\n                  <SegmentDisplayer segments={segmentSetB}/>\n                </div>\n              </Col>\n            </Row>\n          </Container>\n          </Tab>\n          <Tab eventKey=\"features\" title=\"natural classes\">\n            <div>\n              <NaturalClassDisplayer classFeatures={naturalClasses}/>\n            </div>\n            <p>\n              Create natural classes by selecting distinctive features below:\n            </p>\n            {features.map(f => <NaturalClassSelector feature={f} key={f} changeHandler={handleClassChange}/>)}\n          </Tab>\n        </Tabs>\n      </Row>\n      </Container>\n    </div>\n  );\n}\n\nfunction NaturalClassSelector( { feature, changeHandler } ) {\n  const [selected, setSelected] = useState(false);\n  const [selectedFeatureValue, setSelectedFeatureValue] = useState(\"+\");\n  return (\n    <Form>\n      <Form.Group>\n        <Form.Check\n          inline\n          type=\"switch\"\n          label={feature}\n          onChange={() => {\n            setSelected(!selected);\n            changeHandler(!selected, feature, selectedFeatureValue);\n          }}\n        />\n        <Form.Check\n          inline\n          type=\"radio\"\n          disabled={!selected}\n          checked={selectedFeatureValue == \"+\"}\n          onChange={() => {\n            setSelectedFeatureValue(\"+\");\n            changeHandler(selected, feature, \"+\");\n          }}\n          label=\"+\"\n        />\n        <Form.Check\n          inline\n          type=\"radio\"\n          disabled={!selected}\n          checked={selectedFeatureValue == \"-\"}\n          onChange={() => {\n            setSelectedFeatureValue(\"-\");\n            changeHandler(selected, feature, \"-\");\n          }}\n          label=\"-\"\n        />\n      </Form.Group>\n    </Form>\n  )\n}\n\nfunction NaturalClassDisplayer( { classFeatures } ) {\n  console.log(\"NaturalClassDisplayer is being called...\");\n  if (Object.keys(classFeatures).length == 0) {\n    console.log(\"natural classes is length zero\");\n    return (\n      <span/>\n    )\n  }\n  let segmentsToDisplay = [];\n  console.log(\"about to loop through segments of distinctiveFeatures\");\n  for (let segment of Object.keys(distinctiveFeatures)) {\n    let segmentQualifies = true;\n    for (let feature of Object.keys(classFeatures)) {\n      if (distinctiveFeatures[segment][feature] != classFeatures[feature]) {\n        segmentQualifies = false;\n        console.log(\"segment \", segment, \" does not qualify as \", classFeatures[feature], feature);\n        console.log(distinctiveFeatures[segment][feature]);\n        console.log(classFeatures[feature]);\n      }\n    }\n    if (segmentQualifies) {\n      segmentsToDisplay.push(segment);\n    }\n  }\n  console.log(\"about to return segments to display:\");\n  console.log(segmentsToDisplay);\n  return (\n    <div>\n      This is some text. <span>{segmentsToDisplay.join(\", \")}</span>\n    </div>\n  )\n}\n\nfunction checkForInvalidSegments(segments) {\n  if (! segments) {\n    return [false, []]\n  }\n  let invalidSegments = [];\n  for (let segment of segments) {\n    if (segment != \"\" && (! (segment in distinctiveFeatures))) {\n      invalidSegments.push(segment);\n    }\n  }\n  if (invalidSegments.length == 0) {\n    return [false, []]\n  }\n  return [true, invalidSegments]\n}\n\nfunction SegmentSelector( { setID, changeHandler, selectedSegments }) {\n  const [containsInvalidSegments, setContainsInvalidSegments] = useState(false);\n  const [invalidSegments, setInvalidSegments] = useState([]);\n  return (\n    <Form>\n      <Form.Group>\n        <Form.Label>Set {setID}</Form.Label>\n        <Form.Control\n          type=\"text\"\n          size=\"lg\"\n          placeholder=\"e.g. m, n, ŋ\"\n          onChange={e => {\n            changeHandler(e.target.value, setID);\n            const [contains, s] = checkForInvalidSegments(e.target.value.split(stringSplitter).map(s => s.trim()));\n            setContainsInvalidSegments(contains);\n            setInvalidSegments(s);\n          }}\n          />\n        {\n          selectedSegments.length == 0 &&\n          <Form.Text>\n            Enter IPA segments separated by punctuation\n          </Form.Text>\n        }\n        {\n          containsInvalidSegments &&\n          <Form.Text>\n          The following segment(s) are not recognised:\n          {invalidSegments.join(\", \")}\n          </Form.Text>\n        }\n      </Form.Group>\n    </Form>\n  )\n}\n\nfunction getCommonFeatures(segments) {\n  let commonFeatureValues = {};\n  for (let feature of features) {\n    const values = new Set();\n    for (let segment of segments) {\n      values.add(distinctiveFeatures[segment][feature])\n    }\n    if (values.size == 1) {\n      commonFeatureValues[feature] = values.values().next().value;\n    }\n  }\n  return commonFeatureValues;\n}\n\nfunction SegmentDisplayer( { segments }) {\n  if (segments.length == 0) {\n    return\n  }\n  const commonFeatureValues = getCommonFeatures(segments);\n  if (Object.keys(commonFeatureValues).length == 0) {\n    return (\n      <div>\n        These segments have no features in common!\n      </div>\n    )\n  }\n  return (\n    <div>\n      Common features include:\n      <ul>\n      {\n        Object.keys(commonFeatureValues).map(k => <li key={k}>{commonFeatureValues[k] + k}</li>)\n      }\n      </ul>\n    </div>\n  )\n}\n\nfunction DifferenceDisplayer( { setA, setB }) {\n  if (setA.length == 0 && setB.length == 0) {\n    return\n  }\n  if (setA.length > 0 && setB.length > 0) {\n    const commonFeatureValuesA = getCommonFeatures(setA);\n    const commonFeatureValuesB = getCommonFeatures(setB);\n    if (Object.keys(commonFeatureValuesA).length > 0 && Object.keys(commonFeatureValuesA).length > 0) {\n      let differences = [];\n      let uniques = [];\n      for (let feature of Object.keys(commonFeatureValuesA)) {\n        if (feature in commonFeatureValuesB && commonFeatureValuesB[feature] != commonFeatureValuesA[feature]) {\n          differences.push(feature);\n        }\n        if (!(feature in commonFeatureValuesB)) {\n          uniques.push({\"feature\" : feature, \"value\" : commonFeatureValuesA[feature]});\n        }\n      }\n      if (differences.length > 0) {\n        return (\n          <div>\n            Features distinguishing set A from set B:\n            <ul>\n              {differences.map(d => <li key={d}>{d}</li>)}\n            </ul>\n          </div>\n        )\n      }\n      if (uniques.length > 0) {\n        // count how important each unique is\n        let featureExclusions = {};\n        for (let feature of uniques) {\n          // count how many segments in B that this feature of A rules out\n          let exclusions = [];\n          for (let segment of setB) {\n            if (distinctiveFeatures[segment][feature[\"feature\"]] != feature[\"value\"]) {\n              exclusions.push(segment);\n            }\n          }\n          featureExclusions[feature[\"feature\"]] = exclusions.slice();\n        }\n        return (\n          <div>\n            Common features of A that are not common to B:\n            <ul>\n              {uniques.map(x => {\n                return (\n                  <li key={x[\"feature\"]}>\n                    {x[\"value\"] + x[\"feature\"] + \" (distinguishes A from \" + featureExclusions[x[\"feature\"]].length + \" segment\" + (featureExclusions[x[\"feature\"]].length > 1? \"s\" : \"\") + \" in B)\"}\n                  </li>\n                )\n              })}\n            </ul>\n          </div>\n        )\n      }\n    }\n  }\n  return (\n    <div>No features distinguish these two sets of segments.</div>\n  )\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}